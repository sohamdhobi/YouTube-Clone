# Generated by Django 5.1.7 on 2025-04-02 10:02

from django.db import migrations, models
from django.db.migrations.operations.base import Operation

class AddIsProcessingSafely(Operation):
    """
    Add field only if it doesn't already exist
    """
    def __init__(self, model_name, name, field):
        self.model_name = model_name
        self.name = name
        self.field = field

    def state_forwards(self, app_label, state):
        # Check if the field already exists
        model_state = state.models[app_label, self.model_name.lower()]
        if self.name not in model_state.fields:
            model_state.fields[self.name] = self.field.clone()

    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        # Check if the column exists
        with schema_editor.connection.cursor() as cursor:
            table_name = f"{app_label}_{self.model_name.lower()}"
            cursor.execute(
                f"SELECT column_name FROM information_schema.columns WHERE table_name = %s AND column_name = %s",
                [table_name, self.name]
            )
            exists = cursor.fetchone() is not None
            
        # Only add the field if it doesn't exist
        if not exists:
            to_model = to_state.apps.get_model(app_label, self.model_name)
            schema_editor.add_field(to_model, self.field)
        else:
            # Check if column has a default constraint
            from_model = from_state.apps.get_model(app_label, self.model_name)
            if hasattr(schema_editor, 'alter_field_default') and self.field.default is not None:
                schema_editor.alter_field(from_model, None, self.field)

    def database_backwards(self, app_label, schema_editor, from_state, to_state):
        # No backwards operation since this is a safe operation
        pass

    def describe(self):
        return f"Safely add field {self.name} to {self.model_name}"


class Migration(migrations.Migration):

    dependencies = [
        ('videos', 'fix_hls_url'),
    ]

    operations = [
        AddIsProcessingSafely(
            model_name='Video',
            name='is_processing',
            field=models.BooleanField(default=False, help_text="Whether this video is currently being processed"),
        ),
    ]
